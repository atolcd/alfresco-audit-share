<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.atolcd.alfresco</groupId>
  <artifactId>auditshare-74X</artifactId>
  <version>2.1.3-SNAPSHOT</version>
  <name>AuditShare</name>
  <description>Alfresco and Share modules - AuditShare</description>
  <packaging>pom</packaging>

  <prerequisites>
    <maven>3.3.0</maven>
  </prerequisites>

  <properties>
    <!-- Alfresco Maven Plugin version to use -->
    <alfresco.sdk.version>4.5.0</alfresco.sdk.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Properties used in dependency declarations, you don't need to change these -->
    <alfresco.groupId>org.alfresco</alfresco.groupId>
    <alfresco.bomDependencyArtifactId>acs-packaging</alfresco.bomDependencyArtifactId>
    <alfresco.platform.version>7.4.1</alfresco.platform.version>
    <alfresco.platform.docker.user>alfresco</alfresco.platform.docker.user>
    <alfresco.share.version>21.16</alfresco.share.version>
    <alfresco.share.docker.version>7.4.1</alfresco.share.docker.version>

    <!-- Docker Enterprise images -->
    <docker.acs.image>quay.io/alfresco/alfresco-content-repository</docker.acs.image>
    <docker.share.image>quay.io/alfresco/alfresco-share</docker.share.image>

    <!-- Docker Community images -->
    <!-- <docker.acs.image>alfresco/alfresco-content-repository-community</docker.acs.image>
    <docker.share.image>alfresco/alfresco-share</docker.share.image> -->

    <docker.ass.image>alfresco/alfresco-search-services</docker.ass.image>
    <docker.activemq.image>alfresco/alfresco-activemq</docker.activemq.image>

    <!-- Alfresco search service -->
    <alfresco.ass.version>2.0.8</alfresco.ass.version>

    <!-- ActiveMQ -->
    <activemq.version>5.17.1-jre11-rockylinux8</activemq.version>
    <apache.activemq.version>5.17.1</apache.activemq.version>

    <!-- Environment configuration properties -->
    <share.port>8180</share.port>
    <share.debug.port>9898</share.debug.port>
    <acs.host>audit-share-acs</acs.host>
    <acs.port>8080</acs.port>
    <acs.debug.port>8888</acs.debug.port>
    <postgres.port>5555</postgres.port>
    <!-- This parameter is only required for those cases in which ACS is not exposed in http://localhost:8080/alfresco (i.e. Windows Docker) -->
    <test.acs.endpoint.path/>

    <!-- Pour le build jenkins -->
    <java.version>17</java.version>

    <!-- AMP modules -->
    <support-tools.version>1.2.1.0</support-tools.version>

    <keystore.settings>
      -Dencryption.keystore.type=JCEKS
      -Dencryption.cipherAlgorithm=DESede/CBC/PKCS5Padding
      -Dencryption.keyAlgorithm=DESede
      -Dencryption.keystore.location=/usr/local/tomcat/shared/classes/alfresco/extension/keystore/keystore
      -Dmetadata-keystore.password=mp6yc0UD9e
      -Dmetadata-keystore.aliases=metadata
      -Dmetadata-keystore.metadata.password=oKIWzVdEdA
      -Dmetadata-keystore.metadata.algorithm=DESede
      -Dssl.keystore.password=4s@Xssx!tLSYqsdW
      -Dssl.truststore.password=4s@Xssx!tLSYqsdW
    </keystore.settings>
  </properties>

  <!-- Libs used in Unit and Integration tests -->
  <!-- IMPORTANT - Test dependencies need to be here in the top parent POM as
                     the Alfresco Maven IT Mojo runs as part of the parent project ... -->
  <dependencies>
    <!-- The main Alfresco Repo dependency for compiling Java code in src/main/java -->
    <dependency>
      <groupId>${alfresco.groupId}</groupId>
      <artifactId>alfresco-remote-api</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-all</artifactId>
      <version>${apache.activemq.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco platform.
                 NOTE: You still need to define dependencies in your POM, but you can omit version as
                       it's enforced by this dependencyManagement.
                 NOTE: It defaults to the latest version this SDK pom has been tested with,
                       but alfresco version can/should be overridden in your project's pom
            -->
      <dependency>
        <groupId>${alfresco.groupId}</groupId>
        <artifactId>${alfresco.bomDependencyArtifactId}</artifactId>
        <version>${alfresco.platform.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Redefine the following Share dependencies as they have different version numbers than platform.
                 They are defined in alfresco-platform-distribution... -->
      <dependency>
        <groupId>${alfresco.groupId}</groupId>
        <artifactId>share</artifactId>
        <version>${alfresco.share.version}</version>
        <type>war</type>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>${alfresco.groupId}</groupId>
        <artifactId>share</artifactId>
        <version>${alfresco.share.version}</version>
        <classifier>classes</classifier>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>${alfresco.groupId}</groupId>
        <artifactId>alfresco-web-framework-commons</artifactId>
        <version>${alfresco.share.version}</version>
        <classifier>classes</classifier>
        <scope>provided</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>
    <pluginManagement>
      <plugins>
        <!--
                    Build an AMP if 3rd party libs are needed by the extensions
                    JARs are the default artifact produced in your modules, if you want to build an amp for each module
                    you have to enable this plugin and inspect the src/main/assembly.xml file if you want to customize
                    the layout of your AMP. The end result is that Maven will produce both a JAR file and an AMP with your
                    module.
                -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.6</version>
          <executions>
            <execution>
              <id>build-amp-file</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <appendAssemblyId>false</appendAssemblyId>
                <descriptor>src/main/assembly/amp.xml</descriptor>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.alfresco.maven.plugin</groupId>
              <artifactId>alfresco-maven-plugin</artifactId>
              <version>${alfresco.sdk.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <!-- Filter resources in any sub-project with this config -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <encoding>UTF-8</encoding>
            <propertiesEncoding>UTF-8</propertiesEncoding>
            <nonFilteredFileExtensions>              <!-- jpg, jpeg, gif, bmp and png are added automatically -->
              <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
              <nonFilteredFileExtension>acp</nonFilteredFileExtension>
              <nonFilteredFileExtension>svg</nonFilteredFileExtension>
              <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
              <nonFilteredFileExtension>doc</nonFilteredFileExtension>
              <nonFilteredFileExtension>docx</nonFilteredFileExtension>
              <nonFilteredFileExtension>xls</nonFilteredFileExtension>
              <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
              <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
              <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
              <nonFilteredFileExtension>bin</nonFilteredFileExtension>
              <nonFilteredFileExtension>lic</nonFilteredFileExtension>
              <nonFilteredFileExtension>swf</nonFilteredFileExtension>
              <nonFilteredFileExtension>zip</nonFilteredFileExtension>
              <nonFilteredFileExtension>msg</nonFilteredFileExtension>
              <nonFilteredFileExtension>jar</nonFilteredFileExtension>
              <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
              <nonFilteredFileExtension>eot</nonFilteredFileExtension>
              <nonFilteredFileExtension>woff</nonFilteredFileExtension>
              <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
              <nonFilteredFileExtension>css</nonFilteredFileExtension>
              <nonFilteredFileExtension>ico</nonFilteredFileExtension>
              <nonFilteredFileExtension>psd</nonFilteredFileExtension>
              <nonFilteredFileExtension>js</nonFilteredFileExtension>
              <nonFilteredFileExtension>sql</nonFilteredFileExtension>
            </nonFilteredFileExtensions>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M1</version>
          <executions>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.surefire</groupId>
              <artifactId>surefire-junit47</artifactId>
              <version>3.0.0-M1</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <!-- Make sure resources in sub-projects are filtered -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <!-- Filter the test resource files in the AIO parent project, and do property substitutions.
                 We need this config so this is done before the Alfresco Maven Plugin 'run' is executed. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <inherited>false</inherited>
        <!-- Run only for the AIO parent Project -->
        <executions>
          <execution>
            <id>copy-and-filter-docker-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/docker</outputDirectory>
              <resources>
                <resource>
                  <directory>docker</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Compress JavaScript files and store as *-min.js -->
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>yuicompressor-maven-plugin</artifactId>
        <version>1.5.1</version>
        <executions>
          <!-- Compress the JS files under the assembly folder -->
          <execution>
            <id>compress-assembly</id>
            <goals>
              <goal>compress</goal>
            </goals>
            <configuration>
              <sourceDirectory>${project.basedir}/src/main/assembly/web</sourceDirectory>
              <outputDirectory>${project.basedir}/src/main/assembly/web</outputDirectory>
              <excludes>
                <exclude>**/webscripts/**</exclude>
                <exclude>**/site-webscripts/**</exclude>
                <exclude>**/META-INF/**</exclude>
                <exclude>**/*.lib.js</exclude>
                <exclude>**/*.css</exclude>
                <exclude>**/*-min.js</exclude>
                <exclude>**/*-min.css</exclude>
                <exclude>**/C3/*</exclude>
              </excludes>
              <force>true</force>
              <jswarn>false</jswarn>
            </configuration>
          </execution>
          <!-- Compress the JS files under the resources folder -->
          <execution>
            <id>compress-resources</id>
            <goals>
              <goal>compress</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/module/**</exclude>
                <exclude>**/webscripts/**</exclude>
                <exclude>**/site-webscripts/**</exclude>
                <exclude>**/*.lib.js</exclude>
                <exclude>**/*.css</exclude>
                <exclude>**/*-min.js</exclude>
                <exclude>**/*-min.css</exclude>
                <exclude>**/C3/*</exclude>
              </excludes>
              <force>true</force>
              <jswarn>false</jswarn>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>java8</id>
      <activation>
        <jdk>[1.8,11.0)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <source>1.8</source>
              <target>1.8</target>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java11</id>
      <activation>
        <jdk>[11.0,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <release>11</release>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java17</id>
      <activation>
        <jdk>[17.0,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <release>17</release>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- For internal use only (atolcd) -->
  <distributionManagement>
    <repository>
      <id>maven-registry</id>
      <url>https://maven-registry.priv.atolcd.com</url>
      <name>Releases</name>
    </repository>
    <snapshotRepository>
      <id>maven-snapshot-registry</id>
      <url>https://maven-snapshot-registry.priv.atolcd.com</url>
      <name>Snapshot</name>
    </snapshotRepository>
  </distributionManagement>

  <!--
    Alfresco Maven Repositories
  -->
  <repositories>
    <!-- For internal use only (atolcd) -->
    <repository>
      <id>maven-registry</id>
      <name>Atol CD Releases</name>
      <url>https://maven-registry.priv.atolcd.com</url>
      <releases>
        <updatePolicy>always</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>maven-snapshot-registry</id>
      <name>Atol CD Snapshots</name>
      <url>https://maven-snapshot-registry.priv.atolcd.com</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>

    <repository>
      <id>alfresco-public</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
    </repository>
    <repository>
      <id>alfresco-enterprise</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/private</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>

    <!--
    <repository>
      <id>alfresco-public-snapshots</id>
      <url>https://artifacts.alfresco.com/nexus/content/groups/public-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>daily</updatePolicy>
      </snapshots>
    </repository>
    -->

    <!-- Alfresco Enterprise Edition Artifacts, put username/pwd for server in settings.xml -->
    <!-- http://docs.alfresco.com/5.0/tasks/alfresco-sdk-tutorials-configure-maven-enterprise.html -->
    <!-- Uncomment this repository if you want to build AuditShare for Enterprise version -->
  </repositories>

  <modules>
    <module>audit-share-platform</module>
    <module>audit-share-share</module>
    <module>audit-share-platform-docker</module>
    <module>audit-share-share-docker</module>
  </modules>
</project>
